// Code generated by entc, DO NOT EDIT.

package skill

const (
	// Label holds the string label denoting the skill type in the database.
	Label = "skill"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeCandidate holds the string denoting the candidate edge name in mutations.
	EdgeCandidate = "candidate"
	// EdgeJob holds the string denoting the job edge name in mutations.
	EdgeJob = "job"

	// Table holds the table name of the skill in the database.
	Table = "skills"
	// CandidateTable is the table the holds the candidate relation/edge. The primary key declared below.
	CandidateTable = "candidate_skills"
	// CandidateInverseTable is the table name for the Candidate entity.
	// It exists in this package in order to avoid circular dependency with the "candidate" package.
	CandidateInverseTable = "candidates"
	// JobTable is the table the holds the job relation/edge.
	JobTable = "jobs"
	// JobInverseTable is the table name for the Job entity.
	// It exists in this package in order to avoid circular dependency with the "job" package.
	JobInverseTable = "jobs"
	// JobColumn is the table column denoting the job relation/edge.
	JobColumn = "job_skill"
)

// Columns holds all SQL columns for skill fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// CandidatePrimaryKey and CandidateColumn2 are the table columns denoting the
	// primary key for the candidate relation (M2M).
	CandidatePrimaryKey = []string{"candidate_id", "skill_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
